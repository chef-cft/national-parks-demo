pool: henkhaus-forest
stages:


### STAGE 1 Deploy Automate
- stage: Deploy_Automate
  displayName: Deploy Automate
  jobs:
  - job: Setup_Agent
    displayName: Setup Agent
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          sudo yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm
          sudo yum install -y git unzip
      displayName: 'Install Package Dependencies'
    - task: vsts-habitat-install@3
      displayName: 'Install Habitat'
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '0.12.24'
      displayName: "Install Terraform"

  - job: Download_Secure_Files
    displayName: Download Secure Files
    steps:
    - task: DownloadSecureFile@1
      name: tfAutomateVarsFile
      inputs:
        secureFile: 'automate-pipeline.tfvars'
      displayName: 'Download automate-pipeline.tfvars'
    - task: DownloadSecureFile@1
      name: awsInstanceKey
      inputs:
        secureFile: 'demo-validator-us-east-1.pem'
      displayName: 'Download AWS Instance Key'
    - script: |
        cp $(awsInstanceKey.secureFilePath) $(System.DefaultWorkingDirectory)/terraform/chef-automate/aws/ghenkhaus-sa-oregon.pem
  
  - job: Apply_Automate_Terraform
    displayName: Apply Automate Terraform
    steps:
    - task: TerraformTaskV1@0
      inputs:
        provider: 'aws'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/chef-automate/aws'
        backendServiceAWS: 'AWS-ADO-Pipeline'
        backendAWSBucketName: 'sa-s3-tf-backend'
        backendAWSKey: 'terraform_state'
      displayName: "Terraform Init"
    # - task: TerraformTaskV1@0
    #   inputs:
    #     provider: 'aws'
    #     command: 'apply'
    #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/chef-automate/aws'
    #     commandOptions: '-var-file=$(tfAutomateVarsFile.secureFilePath)'
    #     environmentServiceNameAWS: 'AWS-ADO-Pipeline'
    #   displayName: "Terraform Apply"
  


### STAGE 2 Deploy National Parks
- stage: Deploy_National_Parks
  displayName: Deploy National Parks
  jobs:
  - job: Setup_Agent
    displayName: Setup Agent
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          sudo yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm
          sudo yum install -y git unzip
      displayName: 'Install Package Dependencies'
    - task: vsts-habitat-install@3
      displayName: 'Install Habitat'
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '0.12.24'
      displayName: "Install Terraform"

  - job: Download_Secure_Files
    displayName: Download Secure Files
    steps:
    - task: DownloadSecureFile@1
      name: tfNatParksVarsFile
      inputs:
        secureFile: 'nat-parks-pipeline.tfvars'
      displayName: 'Download nat-parks-pipeline.tfvars'
    - task: DownloadSecureFile@1
      name: awsInstanceKey
      inputs:
        secureFile: 'demo-validator-us-east-1.pem'
      displayName: 'Download AWS Instance Key'
    - script: |
        cp $(awsInstanceKey.secureFilePath) $(System.DefaultWorkingDirectory)/terraform/aws/ghenkhaus-sa-oregon.pem

  - job: Apply_National_Parks_Terraform
    displayName: Apply National Parks Terraform
    steps:
    - task: TerraformTaskV1@0
      inputs:
        provider: 'aws'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws'
        backendServiceAWS: 'AWS-ADO-Pipeline'
        backendAWSBucketName: 'sa-s3-tf-backend'
        backendAWSKey: 'terraform_state'
      displayName: "Terraform Init"
    # - task: TerraformTaskV1@0
    #   inputs:
    #     provider: 'aws'
    #     command: 'apply'
    #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws'
    #     commandOptions: '-var-file=$(tfAutomateVarsFile.secureFilePath)'
    #     environmentServiceNameAWS: 'AWS-ADO-Pipeline'
    #   displayName: "Terraform Apply"



### STAGE 3 Clean Up
- stage: Clean_Up 
  displayName: Clean Up
  jobs:
  - job: Setup_Agent
    displayName: Setup Agent
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          sudo yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm
          sudo yum install -y git unzip
      displayName: 'Install Package Dependencies'
    - task: vsts-habitat-install@3
      displayName: 'Install Habitat'
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '0.12.24'
      displayName: "Install Terraform"

  - job: Destory_Automate
    continueOnError: true
    displayName: Destory Automate
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo "skip"
      condition: always()
      displayName: 'Skip'
    # - task: TerraformTaskV1@0
    #   inputs:
    #     provider: 'aws'
    #     command: 'destroy'
    #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/chef-automate/aws'
    #     environmentServiceNameAWS: 'AWS-ADO-Pipeline'
    #   displayName: "Terraform Destroy"

  - job: Destory_National_Parks
    continueOnError: true
    displayName: Destory National Parks
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo "skip"
      condition: always()
      displayName: 'Skip'
    # - task: TerraformTaskV1@0
    #   inputs:
    #     provider: 'aws'
    #     command: 'destroy'
    #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/aws'
    #     environmentServiceNameAWS: 'AWS-ADO-Pipeline'
    #   displayName: "Terraform Destroy"
