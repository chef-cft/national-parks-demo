steps:
- task: Bash@3
  name: parse_outputs
  inputs:  
    targetType: 'inline'
    script: |
              # Load Automate Outputs
              a2_admin=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .a2_admin.value -r )
              echo "##vso[task.setvariable variable=a2AdminUser]$a2_admin"

              a2_admin_password=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .a2_admin_password.value -r )
              echo "##vso[task.setvariable variable=a2AdminPassword]$a2_admin_password"

              a2_token=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .a2_token.value -r )
              echo "##vso[task.setvariable variable=a2Token]$a2_token"

              a2_admin_token=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .a2_admin_token.value -r )
              echo "##vso[task.setvariable variable=a2AdminToken]$a2_admin_token"

              a2_url=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .a2_url.value -r )
              echo "##vso[task.setvariable variable=a2Url]$a2_url"
              
              chef_automate_public_ip=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .chef_automate_public_ip.value -r )
              echo "##vso[task.setvariable variable=chefAutomatePublicIp]$chef_automate_public_ip"
              
              chef_automate_server_public_r53_dns=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_AUTOMATE | jq .chef_automate_server_public_r53_dns.value -r )
              echo "##vso[task.setvariable variable=chefAutomateServerPublicR53Dns]$chef_automate_server_public_r53_dns"
              
              # Load National Parks Outputs
              haproxy_public_ip=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_NATIONAL_PARKS | jq .haproxy_public_ip.value -r)
              echo "##vso[task.setvariable variable=haproxyPublicIp]$haproxy_public_ip"

              mongodb_public_ip=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_NATIONAL_PARKS | jq .mongodb_public_ip.value -r)
              echo "##vso[task.setvariable variable=mongodbPublicIp]$mongodb_public_ip"

              national_parks_public_ip=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_NATIONAL_PARKS | jq .national_parks_public_ip.value -r)
              echo "##vso[task.setvariable variable=nationalParksPublicIp]$national_parks_public_ip"

              permanent_peer_public_ip=$(cat $(Pipeline.Workspace)/variables/national-parks-validator/TF_OUTPUT_NATIONAL_PARKS | jq .permanent_peer_public_ip.value -r)
              echo "##vso[task.setvariable variable=permanentPeerPublicIp]$permanent_peer_public_ip"
  displayName: "Terraform: Parse Outputs"

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
              echo "a2_token: $(a2Token)" > $(Pipeline.Workspace)/variables/national-parks-validator/a2_input_variables.yml
              echo "a2_admin_token: $(a2AdminToken)" >> $(Pipeline.Workspace)/variables/national-parks-validator/a2_input_variables.yml
              echo "a2_url: $(a2Url)" >> $(Pipeline.Workspace)/variables/national-parks-validator/a2_input_variables.yml
  displayName: "Terraform: Store Outputs"

#  TODO: REMOVE THIS BLOCK
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
              echo "a2AdminUser: $(a2AdminUser)"
              echo "a2AdminPassword: $(a2AdminPassword)"
              echo "a2Token: $(a2Token)"
              echo "a2AdminToken: $(a2AdminToken)"
              echo "a2Url: $(a2Url)"
              echo "chefAutomatePublicIp: $(chefAutomatePublicIp)"
              echo "chefAutomateServerPublicR53Dns: $(chefAutomateServerPublicR53Dns)"
              echo "haproxyPublicIp: $(haproxyPublicIp)"
              echo "mongodbPublicIp: $(mongodbPublicIp)"
              echo "nationalParksPublicIp: $(nationalParksPublicIp)"
              echo "permanentPeerPublicIp: $(permanentPeerPublicIp)"
  displayName: "Terraform: Read Outputs"