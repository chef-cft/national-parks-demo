parameters:
- name: copyRedIndexFile # name of the parameter; required
  type: boolean # data type of the parameter; required
  default: false
- name: copyBlueIndexFile # name of the parameter; required
  type: boolean # data type of the parameter; required
  default: false

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
              sudo yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm
              sudo yum install -y git unzip
              sudo yum install epel-release -y
              sudo yum install jq -y
  displayName: 'Install Package Dependencies'

- ${{ if eq(parameters.copyRedIndexFile, true) }}:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
                sudo cp $(System.DefaultWorkingDirectory)/red-index.html $(System.DefaultWorkingDirectory)/src/main/webapp/index.html
    displayName: 'Copy Red Pins'

- ${{ if eq(parameters.copyRedIndexFile, true) }}:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
                sudo cp $(System.DefaultWorkingDirectory)/blue-index.html $(System.DefaultWorkingDirectory)/src/main/webapp/index.html
    displayName: 'Copy Blue Pins'

- task: vsts-habitat-install@3
  displayName: 'Install Habitat'

- task: vsts-habitat-signing-key@3
  inputs:
    habitatOrigin: 'Habitat-Chef-SA-Pipeline'
    taskAction: 'install'
  displayName: 'Install Signing Origin Key'

- task: vsts-habitat-build@3
  inputs:
    habitatOrigin: 'Habitat-Chef-SA-Pipeline'
    habitatSrcPath: '$(Build.SourcesDirectory)'
    habitatPlanContext: 'habitat'
  env:
    HAB_LICENSE: accept-no-persist
  displayName: 'Build Habitat Package'

- task: vsts-habitat-expose-habitat-build-vars@3
  inputs:
    habitatLastBuildEnvPath: '$(Build.SourcesDirectory)/results'
    habitatSetBuildNumber: true
    habitatImageNamesFilename: '$(System.DefaultWorkingDirectory)/image.names'
  displayName: 'Expose Habitat Build Variables'

- publish: $(System.DefaultWorkingDirectory)/results
  artifact: hart
  displayName: 'Publish Artifact'

- script: |
          source $(System.DefaultWorkingDirectory)/results/last_build.env
          echo "##vso[task.setvariable variable=pkg_artifact]$pkg_artifact"
  displayName: 'Publish Artifact Name'

- task: vsts-habitat-pkg-upload@3
  displayName: 'Package Upload'
  inputs:
    habitatOrigin: 'Habitat-Chef-SA-Pipeline'
    habitatPackagePath: '$(System.DefaultWorkingDirectory)/results/$(pkg_artifact)'
    habitatPackageChannel: 'stable'
  env:
    HAB_LICENSE: accept-no-persist