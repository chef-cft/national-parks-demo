trigger:
- chef-docker-webinar

stages:

- stage: Build
  jobs:
  - job: plan
    pool:
      # If you are building a Windows package, you'll need to swap this to a windows image.
      # name: Hosted VS2017
      vmImage: 'ubuntu-latest'
    steps:
    - task: vsts-habitat-install@3
      displayName: 'Install Habitat'

    - task: vsts-habitat-signing-key@3
      displayName: 'Signing Origin Key: install'
      inputs:
        habitatOrigin: bldr

    - task: vsts-habitat-build@3
      inputs:
        habitatOrigin: bldr
        habitatSrcPath: '$(Build.SourcesDirectory)'
        habitatPlanContext: 'habitat'
      env:
        HAB_LICENSE: accept-no-persist
      displayName: "Habitat: Build Package"

    - task: vsts-habitat-expose-habitat-build-vars@3
      displayName: 'Expose Habitat Build Variables'
      inputs:
        habitatSetBuildNumber: true
    - publish: $(System.DefaultWorkingDirectory)/results
      artifact: hart

- stage: Publish_Dev
  jobs:
  - deployment: plan
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: vsts-habitat-install@3
            displayName: 'Install Habitat'
          - task: vsts-habitat-signing-key@3
            displayName: 'Signing Origin Key: install'
            inputs:
              habitatOrigin: bldr
          - script: |
              source $(Pipeline.Workspace)/hart/last_build.env
              echo "##vso[task.setvariable variable=pkg_artifact]$pkg_artifact"
            displayName: 'Publish Artifact Name'
          - task: vsts-habitat-pkg-upload@3
            displayName: 'Package Upload'
            inputs:
              habitatOrigin: bldr
              habitatPackagePath: '$(Pipeline.Workspace)/hart/$(pkg_artifact)'
              habitatPackageChannel: dev
            env:
              HAB_LICENSE: accept-no-persist
          - script: |
              /tmp/hab license accept
              sudo /tmp/hab pkg export container $(Pipeline.Workspace)/hart/$(pkg_artifact)
            displayName: 'Export to Docker'
          - task: chef-software.vsts-chef-tasks.vsts-chef-task-install-inspec.vsts-chef-task-install-inspec@1
            displayName: 'Install InSpec'
          - task: DockerCompose@0
            displayName: Run a Docker Compose command
            inputs:
                action: Run a Docker Compose command
                dockerComposeFile: ../examples/docker-compose.yml
                projectName: $(Build.Repository.Name)
                qualifyImageNames: false
                buildImages: false
                dockerComposeFileArgs: 
                 HAB_LICENSE="accept-no-persist"
                ports: 8080
# - stage: Promote_Stg
#   jobs:
#   - deployment: plan
#     pool:
#       vmImage: 'ubuntu-latest'
#     environment: 'stg'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: vsts-habitat-install@3
#             displayName: 'Install Habitat'
#           - task: vsts-habitat-signing-key@3
#             displayName: 'Signing Origin Key: install'
#             inputs:
#               habitatOrigin: bldr
#           - script: |
#               source $(Pipeline.Workspace)/hart/last_build.env
#               /tmp/hab pkg promote $pkg_ident stage
#             displayName: 'Promote to Stage'
#             env:
#               HAB_LICENSE: accept-no-persist
#
# - stage: Promote_Prod
#   jobs:
#   - deployment: plan
#     pool:
#       vmImage: 'ubuntu-latest'
#     environment: 'prod'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: vsts-habitat-install@3
#             displayName: 'Install Habitat'
#           - task: vsts-habitat-signing-key@3
#             displayName: 'Signing Origin Key: install'
#             inputs:
#               habitatOrigin: bldr
#           - script: |
#               source $(Pipeline.Workspace)/hart/last_build.env
#               /tmp/hab pkg promote $pkg_ident prod
#             displayName: 'Promote to Prod'
#             env:
#               HAB_LICENSE: accept-no-persist
